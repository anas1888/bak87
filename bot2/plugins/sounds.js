import { readFileSync } from 'fs';

export default {
  name: 'ุฅุฑุณุงู ุตูุช',
  command: ['ุตูุช'],
  category: 'ุชุฑููู',
  description: 'ูุฑุณู ููุทุน ุตูุชู ุฅูู ุงููุฌููุนุฉ ุฃู ุงููุญุงุฏุซุฉ.',
  args: [],
  execution: async ({ sock, m }) => {
    try {
      // ูุณุงุฑ ููู ุงูุตูุช (ุชุฃูุฏ ูู ูุถุน ุงูููู ูู ููุณ ูุณุงุฑ ุงูููุฏ)
      const audioPath = './2.opus'; // ุบููุฑ ุงููุณุงุฑ ุญุณุจ ุงูููู ุงููุทููุจ
      const audioBuffer = readFileSync(audioPath);

      // ุฅุฑุณุงู ุงูุตูุช
      await sock.sendMessage(m.key.remoteJid, {
        audio: audioBuffer,
        mimetype: 'audio/ogg; codecs=opus',
        ptt: true, // ูุฌุนู ุงูุตูุช ูุจุฏู ููุฃูู ุฑุณุงูุฉ ุตูุชูุฉ
      });

      console.log('ุชู ุฅุฑุณุงู ุงูุตูุช ุจูุฌุงุญ');
    } catch (error) {
      console.error('ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุฅุฑุณุงู ุงูุตูุช:', error);
      await sock.sendMessage(m.key.remoteJid, { text: 'ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุฅุฑุณุงู ุงูุตูุช ๐ค.' });
    }
  },
};